---
import { gql } from "graphql-request";
import BaseLayout from "../layouts/BaseLayout.astro";
import SmallHeader from "../components/Typography/SmallHeader.astro";
import LargeHeader from "../components/Typography/LargeHeader.astro";
import { client } from "../services/graphql";
import type { GetPostTags } from "../types/posts";
import type { ShortBio } from "../types/shortBio";
import Description from "../components/Typography/Description.astro";
import Avatar from "../components/Assets/Avatar.astro";

export const getShortBio: ShortBio = await client.request(gql`
	query getShortBio {
		ShortBio {
			description
			id
			intro
			name
			avatar {
				description
				src
				width
				author
				title
				height
			}
		}
	}
`);

export const getPostTags: GetPostTags = await client.request(gql`
	query getPostTags {
		allPost {
			edges {
				node {
					tags {
						... on CustomTag {
							id
							tag
						}
					}
				}
			}
		}
	}
`);

const shortBio = getShortBio?.ShortBio;

const posts = getPostTags?.allPost?.edges;

const tags = posts?.map(({ node }) => node?.tags).flat();

const tagRanking: { [k: string]: number } = {};

tags?.forEach((tag) => {
	if (tag) {
		const cur = tagRanking[tag.tag] ?? 0;

		tagRanking[tag.tag] = cur + 1;
	}
});
---

<BaseLayout>
	<div class="flex lg:flex-row flex-col items-center lg:gap-24 gap-16">
		<div class="flex flex-row items-center justify-center max-w-sm lg:min-w-96">
			<Avatar src={shortBio?.avatar?.src} alt={shortBio?.avatar?.description} classlist="" />
		</div>
		<div class="flex flex-col items-start pb-4">
			<SmallHeader>{shortBio?.intro}</SmallHeader>
			<LargeHeader>{shortBio?.name}</LargeHeader>

			<Description classlist="pt-6">{shortBio?.description}</Description>
		</div>
	</div>
	<div class="pt-24">
		<SmallHeader>What I'm up to</SmallHeader>
	</div>
</BaseLayout>
